@page "/register"
@using KawanLamaKhairilIlham.Services
@using KawanLamaKhairilIlham.Services.Interfaces
@inject IUserService UserService
@inject NavigationManager Navigation

<h3>Register</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

<EditForm Model="@userModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>User Name:</label>
        <InputText @bind-Value="userModel.UserName" class="form-control" />
    </div>

    <div>
        <label>Full Name:</label>
        <InputText @bind-Value="userModel.FullName" class="form-control" />
    </div>

    <div>
        <label>Password:</label>
        <InputText @bind-Value="userModel.Password" type="password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary mt-2">Register</button>
</EditForm>

@code {
    private UserModel userModel = new UserModel();
    private string ErrorMessage;

    private async Task HandleRegister()
    {
        var result = await UserService.RegisterUserAsync(userModel.UserName, userModel.FullName, userModel.Password);

        if (result)
        {
            Navigation.NavigateTo("/login");
        }
        else
        {
            ErrorMessage = "User already exists or registration failed.";
        }
    }

    public class UserModel
    {
        public string UserName { get; set; }
        public string FullName { get; set; }
        public string Password { get; set; }
    }
}
